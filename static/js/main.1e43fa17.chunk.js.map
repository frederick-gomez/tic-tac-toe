{"version":3,"sources":["components/Square.js","components/Board.js","helpers/calculateWinner.js","components/Message.js","components/Game.js","App.js","index.js"],"names":["Square","onClick","value","className","Board","squares","map","square","i","calculateWinner","lines","length","a","b","c","Message","props","children","Game","useState","Array","fill","setSquares","nextPlayer","setNextPlayer","isDraw","setIsDraw","winner","xO","resetGame","squaresCopy","indexOf","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAWeA,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC1B,OACC,wBAAQC,UAAU,SAASF,QAASA,EAApC,SACEC,KCQWE,G,MAVD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASJ,EAAc,EAAdA,QACzB,OACC,qBAAKE,UAAU,eAAf,SACEE,EAAQC,KAAI,SAACC,EAAQC,GACrB,OAAO,cAAC,EAAD,CAAgBN,MAAOK,EAAQN,QAAS,kBAAMA,EAAQO,KAAzCA,UCgBTC,EAxBS,SAACJ,GAWxB,IAVA,IAAMK,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECF,EAAI,EAAGA,EAAIE,EAAMC,OAAQH,IAAK,CACtC,kBAAgBE,EAAMF,GAAtB,GAAKI,EAAL,KAAQC,EAAR,KAAWC,EAAX,KACA,GACgB,KAAfT,EAAQO,IACRP,EAAQO,KAAOP,EAAQQ,IACvBR,EAAQO,KAAOP,EAAQS,GAEvB,OAAO,EAGT,OAAO,GCLOC,G,MAbC,SAACC,GAChB,OACC,sBAAKb,UAAU,oBAAf,UACC,oBAAIA,UAAU,eAAd,SAA8Ba,EAAMC,WACnCD,EAAMf,SACN,wBAAQA,QAASe,EAAMf,QAASE,UAAU,YAA1C,6BCwCWe,EA3CF,WACZ,MAA8BC,mBAASC,MAAM,GAAGC,KAAK,KAArD,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAAoCH,mBAAS,KAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KAEMC,EAASlB,EAAgBJ,GACzBuB,EAAoB,MAAfL,EAAqB,IAAM,IAmBhCM,EAAY,WACjBP,EAAWF,MAAM,GAAGC,KAAK,KACzBG,EAAcI,GACdF,GAAU,IAGX,OACC,qCACC,eAAC,EAAD,2BAAuBE,KACvB,cAAC,EAAD,CAAOvB,QAASA,EAASJ,QA1BL,SAACO,GACtB,IAAMsB,EAAW,YAAOzB,GAEpBsB,GAAUG,EAAYtB,KAI1BsB,EAAYtB,GAAKoB,EACjBN,EAAWQ,GACXN,EAAcI,IAEmB,IAA7BE,EAAYC,QAAQ,KAAeJ,GACtCD,GAAU,OAeTC,GACA,eAAC,EAAD,CAAS1B,QAAS4B,EAAlB,UAA8BN,EAA9B,mBAEAE,GAAU,cAAC,EAAD,CAASxB,QAAS4B,EAAlB,iCC9BCG,MATf,WACC,OACC,qCACC,oBAAI7B,UAAU,eAAd,yBACA,cAAC,EAAD,QCHH8B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.1e43fa17.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Square.css';\r\n\r\nconst Square = ({ onClick, value }) => {\r\n\treturn (\r\n\t\t<button className='square' onClick={onClick}>\r\n\t\t\t{value}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\nimport './Board.css';\r\n\r\nconst Board = ({ squares, onClick }) => {\r\n\treturn (\r\n\t\t<div className='board center'>\r\n\t\t\t{squares.map((square, i) => {\r\n\t\t\t\treturn <Square key={i} value={square} onClick={() => onClick(i)} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Board;\r\n","const calculateWinner = (squares) => {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tlet [a, b, c] = lines[i];\r\n\t\tif (\r\n\t\t\tsquares[a] !== '' &&\r\n\t\t\tsquares[a] === squares[b] &&\r\n\t\t\tsquares[a] === squares[c]\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nexport default calculateWinner;\r\n","import React from 'react';\r\nimport './Messages.css';\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className='message-container'>\r\n\t\t\t<h2 className='winner-title'>{props.children}</h2>\r\n\t\t\t{props.onClick && (\r\n\t\t\t\t<button onClick={props.onClick} className='reset-btn'>\r\n\t\t\t\t\tReset Game\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState } from 'react';\r\nimport Board from './Board';\r\nimport calculateWinner from '../helpers/calculateWinner';\r\nimport Message from './Message';\r\n\r\nconst Game = () => {\r\n\tconst [squares, setSquares] = useState(Array(9).fill(''));\r\n\tconst [nextPlayer, setNextPlayer] = useState('X');\r\n\tconst [isDraw, setIsDraw] = useState(false);\r\n\r\n\tconst winner = calculateWinner(squares);\r\n\tconst xO = nextPlayer === 'X' ? 'O' : 'X';\r\n\r\n\tconst selectHandler = (i) => {\r\n\t\tconst squaresCopy = [...squares];\r\n\r\n\t\tif (winner || squaresCopy[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsquaresCopy[i] = xO;\r\n\t\tsetSquares(squaresCopy);\r\n\t\tsetNextPlayer(xO);\r\n\r\n\t\tif (squaresCopy.indexOf('') === -1 && !winner) {\r\n\t\t\tsetIsDraw(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst resetGame = () => {\r\n\t\tsetSquares(Array(9).fill(''));\r\n\t\tsetNextPlayer(xO);\r\n\t\tsetIsDraw(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Message>Next player: {xO}</Message>\r\n\t\t\t<Board squares={squares} onClick={selectHandler} />\r\n\t\t\t{winner && (\r\n\t\t\t\t<Message onClick={resetGame}>{nextPlayer} won the game</Message>\r\n\t\t\t)}\r\n\t\t\t{isDraw && <Message onClick={resetGame}>There is a draw</Message>}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Game from './components/Game';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1 className='title center'>Tic Tac Toe</h1>\r\n\t\t\t<Game />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}